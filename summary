############2021.1.8############
使用反射操作对象-调用可变参数方法
不管基本类型还是引用类型都使用Object[]封装一层,保证无误.
public  void test2(Person... people) {
        System.out.println("xxjsmile people2");
        System.out.println(people);
    }
method.invoke(person,new Object[]{new Person[]{new Person()}});





############2021.1.7############
1:.class
int[].class -->class [I
char[].class -->class [C
long[].class -->class [J
boolean[].class -->class [Z

class [Ljava.lang.Integer;
class [Ljava.lang.Boolean;
class [Ljava.lang.Character;
class [Ljava.lang.String;
2:getMethods
aClass.getMethods():可获取自己的公共方法，可获取父类公共方法
aClass.getDeclaredMethods():可获取自己的私有方法，但不可获取父类
3:对象强转
父类转子类 只有 Person person = new Son();
Son son = (Person)person; 才正确
Person person = new Person();
Son son = (Person)person; 报错
############2021.2.1############
1:== 基本数据类型看的是数值，引用类型比较的是地址
2:Integer和String
对于字符串常量的+号连接，在程序编译期，jvm会将其优化为+连接后的值
对于字符串引用的+号连接问题，由于字符串引用在编译期是无法确定的